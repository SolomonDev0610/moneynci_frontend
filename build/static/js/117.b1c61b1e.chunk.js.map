{"version":3,"sources":["views/apps/Contract/Services/SubServicePattern.js"],"names":["SubServicePattern","state","defaultAlert","confirmAlert","cancelAlert","IdToDelete","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","defaultColDef","sortable","searchVal","columnDefs","headerName","field","filter","editable","checkboxSelection","headerCheckboxSelection","width","pinned","window","innerWidth","headerCheckboxSelectionFilteredOnly","cellRendererFramework","params","className","size","onClick","handleAlert","data","id","onGridReady","gridApi","api","gridColumnApi","columnApi","onCellEditingStopped","Config","headers","Authorization","localStorage","getItem","console","log","axios","put","name","description","variable","value","variable1","value1","total_ht","total_ttc","parent_id","tva","document_id","then","result","catch","error","toast","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","deleteUser","SelectedData","getSelectedRows","updateRowData","remove","get","response","bufferRowData","props","match","forEach","item","push","delete","this","title","warning","show","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","onConfirm","onCancel","success","confirmBtnBsStyle","sm","classnames","closing","opening","refreshing","setFilterModel","isOpen","color","lg","md","for","onChange","e","target","toLowerCase","tag","right","placeholder","Ripple","outline","history","caret","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","paginationPageSize","resizable","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/117.b1c61b1e.chunk.js","sourcesContent":["import React from \"react\"\nimport {Button} from \"reactstrap\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Collapse,\n  Spinner\n} from \"reactstrap\"\nimport axios from \"axios\"\nimport { ContextLayout } from \"../../../../utility/context/Layout\"\nimport { AgGridReact } from \"ag-grid-react\"\nimport {\n  Edit,\n  Trash2,\n  ChevronDown,\n  RotateCw,\n  X, UserPlus, PlusSquare, Home, FolderPlus\n} from \"react-feather\"\nimport classnames from \"classnames\"\nimport { history } from \"../../../../history\"\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\nimport \"../../../../assets/scss/pages/users.scss\"\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Moment from \"react-moment\";\nimport {toast} from \"react-toastify\";\nclass SubServicePattern extends React.Component {\n  state = {\n    defaultAlert : false,\n    confirmAlert : false,\n    cancelAlert : false,\n    IdToDelete: 0,\n    rowData: null,\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: false,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    defaultColDef: {\n      sortable: true\n    },\n    searchVal: \"\",\n    columnDefs: [\n      {\n        headerName: \"Nom de la sous-prestation\",\n        field: \"name\",\n        filter: true,\n        editable: true,\n        checkboxSelection: true,\n        headerCheckboxSelection: true,\n        width: 400,\n        pinned: window.innerWidth > 992 ? \"left\" : false\n      },\n      {\n        headerName: \"€ HT\",\n        field: \"value\",\n        width: 150,\n        filter: true,\n        editable: true,\n        headerCheckboxSelectionFilteredOnly: true,\n      },\n      {\n        headerName: \"Nombre\",\n        field: \"value1\",\n        width: 150,\n        filter: true,\n        editable: true,\n        headerCheckboxSelectionFilteredOnly: true,\n      },\n      {\n        headerName: \"Total HT\",\n        field: \"total_ht\",\n        editable: true,\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Description\",\n        field: \"description\",\n        filter: true,\n        editable: true,\n        width: 400,\n      },\n      {\n        headerName: \"Total TTC\",\n        field: \"total_ttc\",\n        editable: true,\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Actions\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n              <div className=\"actions cursor-pointer\">\n                <Trash2\n                    size={15}\n                    onClick={() => {\n                      this.handleAlert(\"defaultAlert\", true, params.data.id)\n                    }}\n                />\n              </div>\n          )\n        }\n      }\n    ]\n  }\n\n  async componentDidMount() {\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n\n    await axios.get(\"http://vps-a1b847f6.vps.ovh.net:8080/api/services/template\", Config).then(response => {\n      let bufferRowData = response.data\n      let rowData = []\n      let id = this.props.match.params.id\n\n      bufferRowData.forEach(function(item){\n        if (item.parent_id == id)\n          rowData.push(item);\n      });\n\n      this.setState({ rowData })\n    })\n    //axios.get(\"/api/aggrid/data\").then(response => {\n    //  let rowData = response.data.data\n     // JSON.stringify(rowData)\n     // this.setState({ rowData })\n    //})\n  }\n\n  deleteUser(id){\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n    axios.delete(\"http://vps-a1b847f6.vps.ovh.net:8080/api/services/\" + id, Config).then(response => {})\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n  }\n\n  onCellEditingStopped = params => {\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n    console.log(params)\n    axios.put(\"http://vps-a1b847f6.vps.ovh.net:8080/api/services/\" + params.data.id,  {\n      name: params.data.name,\n      description: params.data.description,\n      variable: params.data.variable,\n      value: params.data.value,\n      variable1: params.data.variable1,\n      value1: params.data.value1,\n      total_ht: params.data.total_ht,\n      total_ttc: params.data.total_ttc,\n      parent_id: params.data.parent_id,\n      tva: params.data.tva,\n      document_id: 0,\n      status: \"template\"\n    }, Config)\n        .then(function(result) {\n          console.log(result)\n        })\n        .catch(function(error) {\n          toast.error(\"API injoignable\")\n        })\n  }\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column)\n    var modelObj = null\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val\n      }\n    }\n    filter.setModel(modelObj)\n    this.gridApi.onFilterChanged()\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        pageSize: val\n      })\n    }\n  }\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n    this.setState({\n      searchVal: val\n    })\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\"\n      })\n    }, 500)\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n\n  handleAlert = (state, value, id) => {\n    this.setState({ [state] : value })\n    if (id != 0)\n      this.setState({ IdToDelete : id })\n    if (state === \"confirmAlert\" && value === true) {\n      this.deleteUser(this.state.IdToDelete)\n      var SelectedData = this.gridApi.getSelectedRows();\n      this.gridApi.updateRowData({remove: SelectedData})\n    }\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, pageSize } = this.state\n    return (\n    <div>\n      <SweetAlert title=\"Êtes vous sûrs?\"\n                  warning\n                  show={this.state.defaultAlert}\n                  showCancel\n                  reverseButtons\n                  cancelBtnBsStyle=\"danger\"\n                  confirmBtnText=\"Oui, supprimer\"\n                  cancelBtnText=\"Annuler\"\n                  onConfirm={() => {\n                    this.handleAlert(\"basicAlert\", false, 0)\n                    this.handleAlert(\"confirmAlert\", true, 0)\n                  }}\n                  onCancel={() => {\n                    this.handleAlert(\"basicAlert\", false, 0)\n                    this.handleAlert(\"cancelAlert\", true, 0)\n                  }}\n      >\n        Vous ne pourrez pas revenir en arrière\n      </SweetAlert>\n\n      <SweetAlert success title=\"Supprimé!\"\n                  confirmBtnBsStyle=\"success\"\n                  show={this.state.confirmAlert}\n                  onConfirm={() => {\n                    this.handleAlert(\"defaultAlert\", false, 0)\n                    this.handleAlert(\"confirmAlert\", false, 0)\n                  }}\n      >\n        <p className=\"sweet-alert-text\">Your file has been deleted.</p>\n      </SweetAlert>\n\n      <SweetAlert error title=\"Annulé!\"\n                  confirmBtnBsStyle=\"success\"\n                  show={this.state.cancelAlert}\n                  onConfirm={() =>{\n                    this.handleAlert(\"defaultAlert\", false, 0)\n                    this.handleAlert(\"cancelAlert\", false, 0)\n                  }}\n      >\n        <p className=\"sweet-alert-text\">\n          L'action est annulé\n        </p>\n      </SweetAlert>\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\">\n          <Card\n            className={classnames(\"card-action card-reload\", {\n              \"d-none\": this.state.isVisible === false,\n              \"card-collapsed\": this.state.status === \"Closed\",\n              closing: this.state.status === \"Closing...\",\n              opening: this.state.status === \"Opening...\",\n              refreshing: this.state.reload\n            })}\n          >\n            <CardHeader>\n              <CardTitle>Filters</CardTitle>\n              <div className=\"actions\">\n                <ChevronDown\n                  className=\"collapse-icon mr-50\"\n                  size={15}\n                  onClick={this.toggleCollapse}\n                />\n                <RotateCw\n                  className=\"mr-50\"\n                  size={15}\n                  onClick={() => {\n                    this.refreshCard()\n                    this.gridApi.setFilterModel(null)\n                  }}\n                />\n                <X size={15} onClick={this.removeCard} />\n              </div>\n            </CardHeader>\n            <Collapse\n              isOpen={this.state.collapse}\n              onExited={this.onExited}\n              onEntered={this.onEntered}\n              onExiting={this.onExiting}\n              onEntering={this.onEntering}\n            >\n              <CardBody>\n                {this.state.reload ? (\n                  <Spinner color=\"primary\" className=\"reload-spinner\" />\n                ) : (\n                  \"\"\n                )}\n                <Row>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"role\">Role</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"role\"\n                        id=\"role\"\n                        value={this.state.role}\n                        onChange={e => {\n                          this.setState(\n                            {\n                              role: e.target.value\n                            },\n                            () =>\n                              this.filterData(\n                                \"role\",\n                                this.state.role.toLowerCase()\n                              )\n                          )\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"User\">User</option>\n                        <option value=\"Staff\">Staff</option>\n                        <option value=\"Admin\">Admin</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"status\">Status</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"status\"\n                        id=\"status\"\n                        value={this.state.selectStatus}\n                        onChange={e => {\n                          this.setState(\n                            {\n                              selectStatus: e.target.value\n                            },\n                            () =>\n                              this.filterData(\n                                \"status\",\n                                this.state.selectStatus.toLowerCase()\n                              )\n                          )\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Blocked\">Blocked</option>\n                        <option value=\"Deactivated\">Deactivated</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"verified\">Verified</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"verified\"\n                        id=\"verified\"\n                        value={this.state.verified}\n                        onChange={e => {\n                          this.setState(\n                            {\n                              verified: e.target.value\n                            },\n                            () =>\n                              this.filterData(\n                                \"is_verified\",\n                                this.state.verified.toLowerCase()\n                              )\n                          )\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"True\">True</option>\n                        <option value=\"False\">False</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"department\">Department</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"department\"\n                        id=\"department\"\n                        value={this.state.department}\n                        onChange={e => {\n                          this.setState(\n                            {\n                              department: e.target.value\n                            },\n                            () =>\n                              this.filterData(\n                                \"department\",\n                                this.state.department.toLowerCase()\n                              )\n                          )\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"Sales\">Sales</option>\n                        <option value=\"Development\">Development</option>\n                        <option value=\"Management\">Management</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Collapse>\n          </Card>\n        </Col>\n        <Col sm=\"12\">\n          <Card>\n            <CardBody>\n              <div className=\"ag-theme-material ag-grid-table\">\n                <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\n                  <div className=\"sort-dropdown\">\n                    <UncontrolledDropdown className=\"ag-dropdown p-1\">\n                      <DropdownToggle tag=\"div\">\n                        1 - {pageSize} of 150\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(150)}\n                        >\n                          150\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"filter-actions d-flex\">\n                    <Input\n                      className=\"w-50 mr-1 mb-1 mb-sm-0\"\n                      type=\"text\"\n                      placeholder=\"search...\"\n                      onChange={e => this.updateSearchQuery(e.target.value)}\n                      value={this.state.searchVal}\n                    />\n                    <div>\n                      <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\" onClick={() => history.push(\"/app/user/createSubService/\" + this.props.match.params.id)}>\n                        <PlusSquare size={15} />\n                      </Button.Ripple>\n                    </div>\n                    <div className=\"dropdown mr-1 mb-1 d-inline-block\">\n                      <UncontrolledButtonDropdown>\n                        <DropdownToggle color=\"primary\" caret>\n                          Actions\n                          <ChevronDown size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu>\n                          <DropdownItem tag=\"a\">\n                            <Home size={15} />\n                            <span className=\"align-middle ml-50\">Exemple d'action</span>\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledButtonDropdown>\n                    </div>\n                  </div>\n                </div>\n                {this.state.rowData !== null ? (\n                  <ContextLayout.Consumer>\n                    {context => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={true}\n                        pagination={true}\n                        pivotPanelShow=\"always\"\n                        paginationPageSize={pageSize}\n                        resizable={true}\n                        onCellEditingStopped={this.onCellEditingStopped}\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                ) : null}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n    )\n  }\n}\n\nexport default SubServicePattern\n"],"sourceRoot":""}