{"version":3,"sources":["views/apps/user/edit/AllDocuments.js"],"names":["AllDocuments","state","defaultAlert","confirmAlert","cancelAlert","IdToDelete","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","defaultColDef","resizable","sortable","searchVal","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","cellRendererFramework","params","className","onClick","history","push","data","id","comment","advanced_payment","format","date","created_at","utc","size","handleAlert","onGridReady","gridApi","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","value","deleteDoc","SelectedData","getSelectedRows","updateRowData","remove","Config","headers","Authorization","localStorage","getItem","axios","get","then","response","delete","this","title","warning","show","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","onConfirm","onCancel","success","confirmBtnBsStyle","error","sm","classnames","closing","opening","refreshing","setFilterModel","isOpen","color","lg","md","for","name","onChange","e","target","toLowerCase","tag","right","placeholder","Ripple","outline","props","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","paginationPageSize","enableRtl","direction","React","Component"],"mappings":"ijBA0BMA,E,4MACJC,MAAQ,CACNC,cAAe,EACfC,cAAe,EACfC,aAAc,EACdC,WAAY,EACZC,QAAS,KACTC,SAAU,GACVC,WAAW,EACXC,QAAQ,EACRC,UAAU,EACVC,OAAQ,SACRC,KAAM,MACNC,aAAc,MACdC,SAAU,MACVC,WAAY,MACZC,cAAe,CACbC,WAAW,EACXC,UAAU,GAEZC,UAAW,GACXC,WAAY,CACV,CACEC,WAAY,KACZC,MAAO,KACPC,MAAO,IACPC,QAAQ,EACRC,mBAAmB,EACnBC,qCAAqC,EACrCC,yBAAyB,GAE3B,CACEN,WAAY,cACZC,MAAO,UACPE,QAAQ,EACRD,MAAO,IACPK,sBAAuB,SAAAC,GACrB,OACI,yBACIC,UAAU,2CACVC,QAAS,kBAAMC,IAAQC,KAAK,mBAAqBJ,EAAOK,KAAKC,MAE/D,8BAAON,EAAOK,KAAKE,YAK7B,CACEf,WAAY,UACZC,MAAO,mBACPE,QAAQ,EACRD,MAAO,IACPK,sBAAuB,SAAAC,GACrB,OACI,yBACIC,UAAU,4CAGZ,8BAAOD,EAAOK,KAAKG,iBAAmB,cAKhD,CACEhB,WAAY,OACZC,MAAO,iBACPE,QAAQ,EACRD,MAAO,KAET,CACEF,WAAY,sBACZC,MAAO,OACPE,QAAQ,EACRD,MAAO,IACPK,sBAAuB,SAAAC,GACrB,OACI,6BACE,kBAAC,IAAD,CAAQS,OAAO,mBAAmBC,KAAMV,EAAOK,KAAKM,WAAYC,KAAG,OAK7E,CACEpB,WAAY,UACZC,MAAO,eACPC,MAAO,IACPK,sBAAuB,SAAAC,GACrB,OACI,yBAAKC,UAAU,0BACb,kBAAC,IAAD,CACIY,KAAM,GACNX,QAAS,WAAO,EAAKY,YAAY,gBAAgB,EAAMd,EAAOK,KAAKC,Y,EA8BrFS,YAAc,SAAAf,GACZ,EAAKgB,QAAUhB,EAAOiB,IACtB,EAAKC,cAAgBlB,EAAOmB,W,EAG9BC,WAAa,SAACC,EAAQC,GACpB,IACIC,EAAW,KACH,QAARD,IACFC,EAAW,CACTC,KAAM,SACN7B,OAAQ2B,IALC,EAAKN,QAAQS,kBAAkBJ,GAQrCK,SAASH,GAChB,EAAKP,QAAQW,mB,EAGfC,WAAa,SAAAN,GACP,EAAKN,UACP,EAAKA,QAAQa,sBAAsBC,OAAOR,IAC1C,EAAKS,SAAS,CACZrD,SAAU4C,M,EAIhBU,kBAAoB,SAAAV,GAClB,EAAKN,QAAQiB,eAAeX,GAC5B,EAAKS,SAAS,CACZzC,UAAWgC,K,EAIfY,YAAc,WACZ,EAAKH,SAAS,CAAEnD,QAAQ,IACxBuD,YAAW,WACT,EAAKJ,SAAS,CACZnD,QAAQ,EACRG,KAAM,MACNC,aAAc,MACdC,SAAU,MACVC,WAAY,UAEb,M,EAGLkD,eAAiB,WACf,EAAKL,UAAS,SAAA3D,GAAK,MAAK,CAAES,UAAWT,EAAMS,c,EAE7CwD,UAAY,WACV,EAAKN,SAAS,CAAEjD,OAAQ,Y,EAE1BwD,WAAa,WACX,EAAKP,SAAS,CAAEjD,OAAQ,gB,EAG1BuD,UAAY,WACV,EAAKN,SAAS,CAAEjD,OAAQ,Y,EAE1ByD,UAAY,WACV,EAAKR,SAAS,CAAEjD,OAAQ,gB,EAE1B0D,SAAW,WACT,EAAKT,SAAS,CAAEjD,OAAQ,Y,EAE1B2D,WAAa,WACX,EAAKV,SAAS,CAAEpD,WAAW,K,EAY7BmC,YAAc,SAAC1C,EAAOsE,EAAOpC,GAI3B,GAHA,EAAKyB,SAAL,eAAgB3D,EAAQsE,IACd,GAANpC,GACF,EAAKyB,SAAS,CAACvD,WAAY8B,IACf,iBAAVlC,IAAsC,IAAVsE,EAAgB,CAC9C,EAAKC,UAAU,EAAKvE,MAAMI,YAC1B,IAAIoE,EAAe,EAAK5B,QAAQ6B,kBAChC,EAAK7B,QAAQ8B,cAAc,CAACC,OAAQH,M,gMAzGhCI,EAAS,CACbC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,W,SAG9CC,IAAMC,IAAI,qDAAsDN,GAAQO,MAAK,SAAAC,GACjF,IAAI/E,EAAU+E,EAASnD,KACvB,EAAK0B,SAAS,CAAEtD,e,iIAIV6B,GACR,IAAM0C,EAAS,CACbC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,WAGpDC,IAAMI,OAAO,sDAAwDnD,EAAI0C,GAAQO,MAAK,SAAAC,S,gCAwE9ElD,GACR,IAAM0C,EAAS,CACbC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,WAGpDC,IAAMI,OAAO,sDAAwDnD,EAAI0C,GAAQO,MAAK,SAAAC,S,+BAc9E,IAAD,SACkDE,KAAKtF,MAAtDK,EADD,EACCA,QAASc,EADV,EACUA,WAAYJ,EADtB,EACsBA,cAAeT,EADrC,EACqCA,SAC5C,OACI,6BACE,kBAAC,IAAD,CAAYiF,MAAM,wBACNC,SAAO,EACPC,KAAMH,KAAKtF,MAAMC,aACjByF,YAAU,EACVC,gBAAc,EACdC,iBAAiB,SACjBC,eAAe,iBACfC,cAAc,UACdC,UAAW,WACT,EAAKrD,YAAY,cAAc,EAAO,GACtC,EAAKA,YAAY,gBAAgB,EAAM,IAEzCsD,SAAU,WACR,EAAKtD,YAAY,cAAc,EAAO,GACtC,EAAKA,YAAY,eAAe,EAAM,KAdpD,6CAoBA,kBAAC,IAAD,CAAYuD,SAAO,EAACV,MAAM,eACdW,kBAAkB,UAClBT,KAAMH,KAAKtF,MAAME,aACjB6F,UAAW,WACT,EAAKrD,YAAY,gBAAgB,EAAO,GACxC,EAAKA,YAAY,gBAAgB,EAAO,KAGpD,uBAAGb,UAAU,oBAAb,gCAGF,kBAAC,IAAD,CAAYsE,OAAK,EAACZ,MAAM,aACZW,kBAAkB,UAClBT,KAAMH,KAAKtF,MAAMG,YACjB4F,UAAW,WACT,EAAKrD,YAAY,gBAAgB,EAAO,GACxC,EAAKA,YAAY,eAAe,EAAO,KAGnD,uBAAGb,UAAU,oBAAb,2BAIF,kBAAC,IAAD,CAAKA,UAAU,iBACb,kBAAC,IAAD,CAAKuE,GAAG,MACN,kBAAC,IAAD,CACIvE,UAAWwE,IAAW,0BAA2B,CAC/C,UAAmC,IAAzBf,KAAKtF,MAAMO,UACrB,iBAAwC,WAAtB+E,KAAKtF,MAAMU,OAC7B4F,QAA+B,eAAtBhB,KAAKtF,MAAMU,OACpB6F,QAA+B,eAAtBjB,KAAKtF,MAAMU,OACpB8F,WAAYlB,KAAKtF,MAAMQ,UAG3B,kBAAC,IAAD,KACE,wCACA,yBAAKqB,UAAU,WACb,kBAAC,IAAD,CACIA,UAAU,sBACVY,KAAM,GACNX,QAASwD,KAAKtB,iBAElB,kBAAC,IAAD,CACInC,UAAU,QACVY,KAAM,GACNX,QAAS,WACP,EAAKgC,cACL,EAAKlB,QAAQ6D,eAAe,SAGlC,kBAAC,IAAD,CAAGhE,KAAM,GAAIX,QAASwD,KAAKjB,eAG/B,kBAAC,IAAD,CACIqC,OAAQpB,KAAKtF,MAAMS,SACnB2D,SAAUkB,KAAKlB,SACfH,UAAWqB,KAAKrB,UAChBE,UAAWmB,KAAKnB,UAChBD,WAAYoB,KAAKpB,YAEnB,kBAAC,IAAD,KACGoB,KAAKtF,MAAMQ,OACR,kBAAC,IAAD,CAASmG,MAAM,UAAU9E,UAAU,mBAEnC,GAEJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+E,GAAG,IAAIC,GAAG,IAAIT,GAAG,MACpB,kBAAC,IAAD,CAAWvE,UAAU,QACnB,kBAAC,IAAD,CAAOiF,IAAI,QAAX,QACA,kBAAC,IAAD,CACI1D,KAAK,SACL2D,KAAK,OACL7E,GAAG,OACHoC,MAAOgB,KAAKtF,MAAMW,KAClBqG,SAAU,SAAAC,GACR,EAAKtD,SACD,CACEhD,KAAMsG,EAAEC,OAAO5C,QAEjB,kBACI,EAAKtB,WACD,OACA,EAAKhD,MAAMW,KAAKwG,oBAKhC,4BAAQ7C,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,YAIN,kBAAC,IAAD,CAAKsC,GAAG,IAAIC,GAAG,IAAIT,GAAG,MACpB,kBAAC,IAAD,CAAWvE,UAAU,QACnB,kBAAC,IAAD,CAAOiF,IAAI,UAAX,UACA,kBAAC,IAAD,CACI1D,KAAK,SACL2D,KAAK,SACL7E,GAAG,SACHoC,MAAOgB,KAAKtF,MAAMY,aAClBoG,SAAU,SAAAC,GACR,EAAKtD,SACD,CACE/C,aAAcqG,EAAEC,OAAO5C,QAEzB,kBACI,EAAKtB,WACD,SACA,EAAKhD,MAAMY,aAAauG,oBAKxC,4BAAQ7C,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,eAAd,kBAIN,kBAAC,IAAD,CAAKsC,GAAG,IAAIC,GAAG,IAAIT,GAAG,MACpB,kBAAC,IAAD,CAAWvE,UAAU,QACnB,kBAAC,IAAD,CAAOiF,IAAI,YAAX,YACA,kBAAC,IAAD,CACI1D,KAAK,SACL2D,KAAK,WACL7E,GAAG,WACHoC,MAAOgB,KAAKtF,MAAMa,SAClBmG,SAAU,SAAAC,GACR,EAAKtD,SACD,CACE9C,SAAUoG,EAAEC,OAAO5C,QAErB,kBACI,EAAKtB,WACD,cACA,EAAKhD,MAAMa,SAASsG,oBAKpC,4BAAQ7C,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YAIN,kBAAC,IAAD,CAAKsC,GAAG,IAAIC,GAAG,IAAIT,GAAG,MACpB,kBAAC,IAAD,CAAWvE,UAAU,QACnB,kBAAC,IAAD,CAAOiF,IAAI,cAAX,cACA,kBAAC,IAAD,CACI1D,KAAK,SACL2D,KAAK,aACL7E,GAAG,aACHoC,MAAOgB,KAAKtF,MAAMc,WAClBkG,SAAU,SAAAC,GACR,EAAKtD,SACD,CACE7C,WAAYmG,EAAEC,OAAO5C,QAEvB,kBACI,EAAKtB,WACD,aACA,EAAKhD,MAAMc,WAAWqG,oBAKtC,4BAAQ7C,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,cAAd,sBAShB,kBAAC,IAAD,CAAK8B,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKvE,UAAU,mCACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgBuF,IAAI,OAApB,OACO9G,EADP,UAEE,kBAAC,IAAD,CAAauB,UAAU,QAAQY,KAAM,MAEvC,kBAAC,IAAD,CAAc4E,OAAK,GACjB,kBAAC,IAAD,CACID,IAAI,MACJtF,QAAS,kBAAM,EAAK0B,WAAW,MAFnC,MAMA,kBAAC,IAAD,CACI4D,IAAI,MACJtF,QAAS,kBAAM,EAAK0B,WAAW,MAFnC,MAMA,kBAAC,IAAD,CACI4D,IAAI,MACJtF,QAAS,kBAAM,EAAK0B,WAAW,OAFnC,OAMA,kBAAC,IAAD,CACI4D,IAAI,MACJtF,QAAS,kBAAM,EAAK0B,WAAW,OAFnC,UASN,yBAAK3B,UAAU,yBACb,kBAAC,IAAD,CACIA,UAAU,yBACVuB,KAAK,OACLkE,YAAY,YACZN,SAAU,SAAAC,GAAC,OAAI,EAAKrD,kBAAkBqD,EAAEC,OAAO5C,QAC/CA,MAAOgB,KAAKtF,MAAMkB,YAEtB,6BACE,kBAAC,IAAOqG,OAAR,CAAe1F,UAAU,YAAY2F,SAAO,EAACb,MAAM,QAAQ7E,QAAS,kBAAMC,IAAQC,KAAK,gCAAkC,EAAKyF,MAAMvF,MAClI,kBAAC,IAAD,CAAYO,KAAM,OAGtB,yBAAKZ,UAAU,6BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBA,UAAU,aAAa8E,MAAM,SAA7C,UAEE,kBAAC,IAAD,CAAa9E,UAAU,QAAQY,KAAM,MAEvC,kBAAC,IAAD,CAAc4E,OAAK,GACjB,kBAAC,IAAD,CAAcD,IAAI,KAChB,kBAAC,IAAD,CAAM3E,KAAM,KACZ,0BAAMZ,UAAU,sBAAhB,0BAOY,OAAvByD,KAAKtF,MAAMK,QACR,kBAAC,IAAcqH,SAAf,MACG,SAAAC,GAAO,OACJ,kBAAC,cAAD,CACIC,YAAa,GACbC,aAAa,WACb9G,cAAeA,EACfI,WAAYA,EACZd,QAASA,EACTsC,YAAa,EAAKA,YAClBmF,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZC,eAAe,SACfC,mBAAoB7H,EACpBU,WAAW,EACXoH,UAAuC,QAA5BT,EAAQ3H,MAAMqI,eAInC,e,GA1fGC,IAAMC,WAogBlBxI,a","file":"static/js/119.e35f8b9c.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button,\n  Card,\n  CardHeader,\n  Collapse,\n  CardBody, Spinner, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledButtonDropdown\n} from \"reactstrap\"\nimport {\n  Edit, Trash2, ChevronDown, RotateCw, X, Home, FolderPlus\n} from \"react-feather\"\nimport {history} from \"../../../../history\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport {ContextLayout} from \"../../../../utility/context/Layout\";\nimport {AgGridReact} from \"ag-grid-react\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\nimport \"../../../../assets/scss/pages/users.scss\"\nimport Moment from \"react-moment\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass AllDocuments extends React.Component {\n  state = {\n    defaultAlert : false,\n    confirmAlert : false,\n    cancelAlert : false,\n    IdToDelete: 0,\n    rowData: null,\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: false,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    defaultColDef: {\n      resizable: true,\n      sortable: true\n    },\n    searchVal: \"\",\n    columnDefs: [\n      {\n        headerName: \"ID\",\n        field: \"id\",\n        width: 150,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      },\n      {\n        headerName: \"Commentaire\",\n        field: \"comment\",\n        filter: true,\n        width: 500,\n        cellRendererFramework: params => {\n          return (\n              <div\n                  className=\"d-flex align-items-center cursor-pointer\"\n                  onClick={() => history.push(\"/pages/contract/\" + params.data.id)}\n              >\n                <span>{params.data.comment}</span>\n              </div>\n          )\n        }\n      },\n      {\n        headerName: \"Montant\",\n        field: \"advanced_payment\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: params => {\n          return (\n              <div\n                  className=\"d-flex align-items-center cursor-pointer\"\n                  //onClick={() => history.push(\"/app/user/edit/\" + params.data.id)}\n              >\n                <span>{params.data.advanced_payment + \" €\"}</span>\n              </div>\n          )\n        }\n      },\n      {\n        headerName: \"Etat\",\n        field: \"document_state\",\n        filter: true,\n        width: 200\n      },\n      {\n        headerName: \"Date de Création\",\n        field: \"date\",\n        filter: true,\n        width: 300,\n        cellRendererFramework: params => {\n          return (\n              <div>\n                <Moment format=\"DD-MM-YYYY HH:mm\" date={params.data.created_at} utc/>\n              </div>\n          )\n        }\n      },\n      {\n        headerName: \"Actions\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n              <div className=\"actions cursor-pointer\">\n                <Trash2\n                    size={15}\n                    onClick={() => {this.handleAlert(\"defaultAlert\", true, params.data.id)}}\n                />\n              </div>\n          )\n        }\n      }\n    ]\n  }\n\n  async componentDidMount() {\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n    await axios.get(\"http://localhost:8000/api/documents\", Config).then(response => {\n      let rowData = response.data\n      this.setState({ rowData })\n    })\n  }\n\n  deleteDoc(id){\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n    axios.delete(\"http://localhost:8000/api/documents/\" + id, Config).then(response => {})\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n  }\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column)\n    var modelObj = null\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val\n      }\n    }\n    filter.setModel(modelObj)\n    this.gridApi.onFilterChanged()\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        pageSize: val\n      })\n    }\n  }\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n    this.setState({\n      searchVal: val\n    })\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\"\n      })\n    }, 500)\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n\n  deleteDoc(id){\n    const Config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }\n    axios.delete(\"http://localhost:8000/api/documents/\" + id, Config).then(response => {})\n  }\n\n  handleAlert = (state, value, id) => {\n    this.setState({[state]: value})\n    if (id != 0)\n      this.setState({IdToDelete: id})\n    if (state === \"confirmAlert\" && value === true) {\n      this.deleteDoc(this.state.IdToDelete)\n      var SelectedData = this.gridApi.getSelectedRows();\n      this.gridApi.updateRowData({remove: SelectedData})\n    }\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, pageSize } = this.state\n    return (\n        <div>\n          <SweetAlert title=\"Êtes vous sûrs?\"\n                      warning\n                      show={this.state.defaultAlert}\n                      showCancel\n                      reverseButtons\n                      cancelBtnBsStyle=\"danger\"\n                      confirmBtnText=\"Oui, supprimer\"\n                      cancelBtnText=\"Annuler\"\n                      onConfirm={() => {\n                        this.handleAlert(\"basicAlert\", false, 0)\n                        this.handleAlert(\"confirmAlert\", true, 0)\n                      }}\n                      onCancel={() => {\n                        this.handleAlert(\"basicAlert\", false, 0)\n                        this.handleAlert(\"cancelAlert\", true, 0)\n                      }}\n          >\n            Vous ne pourrez pas revenir en arrière\n          </SweetAlert>\n\n          <SweetAlert success title=\"Supprimé!\"\n                      confirmBtnBsStyle=\"success\"\n                      show={this.state.confirmAlert}\n                      onConfirm={() => {\n                        this.handleAlert(\"defaultAlert\", false, 0)\n                        this.handleAlert(\"confirmAlert\", false, 0)\n                      }}\n          >\n            <p className=\"sweet-alert-text\">Your file has been deleted.</p>\n          </SweetAlert>\n\n          <SweetAlert error title=\"Annulé!\"\n                      confirmBtnBsStyle=\"success\"\n                      show={this.state.cancelAlert}\n                      onConfirm={() =>{\n                        this.handleAlert(\"defaultAlert\", false, 0)\n                        this.handleAlert(\"cancelAlert\", false, 0)\n                      }}\n          >\n            <p className=\"sweet-alert-text\">\n              L'action est annulé\n            </p>\n          </SweetAlert>\n          <Row className=\"app-user-list\">\n            <Col sm=\"12\">\n              <Card\n                  className={classnames(\"card-action card-reload\", {\n                    \"d-none\": this.state.isVisible === false,\n                    \"card-collapsed\": this.state.status === \"Closed\",\n                    closing: this.state.status === \"Closing...\",\n                    opening: this.state.status === \"Opening...\",\n                    refreshing: this.state.reload\n                  })}\n              >\n                <CardHeader>\n                  <h4>Contrats</h4>\n                  <div className=\"actions\">\n                    <ChevronDown\n                        className=\"collapse-icon mr-50\"\n                        size={15}\n                        onClick={this.toggleCollapse}\n                    />\n                    <RotateCw\n                        className=\"mr-50\"\n                        size={15}\n                        onClick={() => {\n                          this.refreshCard()\n                          this.gridApi.setFilterModel(null)\n                        }}\n                    />\n                    <X size={15} onClick={this.removeCard} />\n                  </div>\n                </CardHeader>\n                <Collapse\n                    isOpen={this.state.collapse}\n                    onExited={this.onExited}\n                    onEntered={this.onEntered}\n                    onExiting={this.onExiting}\n                    onEntering={this.onEntering}\n                >\n                  <CardBody>\n                    {this.state.reload ? (\n                        <Spinner color=\"primary\" className=\"reload-spinner\" />\n                    ) : (\n                        \"\"\n                    )}\n                    <Row>\n                      <Col lg=\"3\" md=\"6\" sm=\"12\">\n                        <FormGroup className=\"mb-0\">\n                          <Label for=\"role\">Role</Label>\n                          <Input\n                              type=\"select\"\n                              name=\"role\"\n                              id=\"role\"\n                              value={this.state.role}\n                              onChange={e => {\n                                this.setState(\n                                    {\n                                      role: e.target.value\n                                    },\n                                    () =>\n                                        this.filterData(\n                                            \"role\",\n                                            this.state.role.toLowerCase()\n                                        )\n                                )\n                              }}\n                          >\n                            <option value=\"All\">All</option>\n                            <option value=\"User\">User</option>\n                            <option value=\"Staff\">Staff</option>\n                            <option value=\"Admin\">Admin</option>\n                          </Input>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"3\" md=\"6\" sm=\"12\">\n                        <FormGroup className=\"mb-0\">\n                          <Label for=\"status\">Status</Label>\n                          <Input\n                              type=\"select\"\n                              name=\"status\"\n                              id=\"status\"\n                              value={this.state.selectStatus}\n                              onChange={e => {\n                                this.setState(\n                                    {\n                                      selectStatus: e.target.value\n                                    },\n                                    () =>\n                                        this.filterData(\n                                            \"status\",\n                                            this.state.selectStatus.toLowerCase()\n                                        )\n                                )\n                              }}\n                          >\n                            <option value=\"All\">All</option>\n                            <option value=\"Active\">Active</option>\n                            <option value=\"Blocked\">Blocked</option>\n                            <option value=\"Deactivated\">Deactivated</option>\n                          </Input>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"3\" md=\"6\" sm=\"12\">\n                        <FormGroup className=\"mb-0\">\n                          <Label for=\"verified\">Verified</Label>\n                          <Input\n                              type=\"select\"\n                              name=\"verified\"\n                              id=\"verified\"\n                              value={this.state.verified}\n                              onChange={e => {\n                                this.setState(\n                                    {\n                                      verified: e.target.value\n                                    },\n                                    () =>\n                                        this.filterData(\n                                            \"is_verified\",\n                                            this.state.verified.toLowerCase()\n                                        )\n                                )\n                              }}\n                          >\n                            <option value=\"All\">All</option>\n                            <option value=\"True\">True</option>\n                            <option value=\"False\">False</option>\n                          </Input>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"3\" md=\"6\" sm=\"12\">\n                        <FormGroup className=\"mb-0\">\n                          <Label for=\"department\">Department</Label>\n                          <Input\n                              type=\"select\"\n                              name=\"department\"\n                              id=\"department\"\n                              value={this.state.department}\n                              onChange={e => {\n                                this.setState(\n                                    {\n                                      department: e.target.value\n                                    },\n                                    () =>\n                                        this.filterData(\n                                            \"department\",\n                                            this.state.department.toLowerCase()\n                                        )\n                                )\n                              }}\n                          >\n                            <option value=\"All\">All</option>\n                            <option value=\"Sales\">Sales</option>\n                            <option value=\"Development\">Development</option>\n                            <option value=\"Management\">Management</option>\n                          </Input>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Collapse>\n              </Card>\n            </Col>\n            <Col sm=\"12\">\n              <Card>\n                <CardBody>\n                  <div className=\"ag-theme-material ag-grid-table\">\n                    <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\n                      <div className=\"sort-dropdown\">\n                        <UncontrolledDropdown className=\"ag-dropdown p-1\">\n                          <DropdownToggle tag=\"div\">\n                            1 - {pageSize} of 150\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(150)}\n                            >\n                              150\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"filter-actions d-flex\">\n                        <Input\n                            className=\"w-50 mr-1 mb-1 mb-sm-0\"\n                            type=\"text\"\n                            placeholder=\"search...\"\n                            onChange={e => this.updateSearchQuery(e.target.value)}\n                            value={this.state.searchVal}\n                        />\n                        <div>\n                          <Button.Ripple className=\"mr-1 mb-1\" outline color=\"light\" onClick={() => history.push(\"/app/contract/handleServices/\" + this.props.id)}>\n                            <FolderPlus size={15} />\n                          </Button.Ripple>\n                        </div>\n                        <div className=\"dropdown actions-dropdown\">\n                          <UncontrolledButtonDropdown>\n                            <DropdownToggle className=\"px-2 py-75\" color=\"white\">\n                              Actions\n                              <ChevronDown className=\"ml-50\" size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                              <DropdownItem tag=\"a\">\n                                <Home size={15} />\n                                <span className=\"align-middle ml-50\">Exemple d'action</span>\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledButtonDropdown>\n                        </div>\n                      </div>\n                    </div>\n                    {this.state.rowData !== null ? (\n                        <ContextLayout.Consumer>\n                          {context => (\n                              <AgGridReact\n                                  gridOptions={{}}\n                                  rowSelection=\"multiple\"\n                                  defaultColDef={defaultColDef}\n                                  columnDefs={columnDefs}\n                                  rowData={rowData}\n                                  onGridReady={this.onGridReady}\n                                  colResizeDefault={\"shift\"}\n                                  animateRows={true}\n                                  floatingFilter={true}\n                                  pagination={true}\n                                  pivotPanelShow=\"always\"\n                                  paginationPageSize={pageSize}\n                                  resizable={true}\n                                  enableRtl={context.state.direction === \"rtl\"}\n                              />\n                          )}\n                        </ContextLayout.Consumer>\n                    ) : null}\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n    )\n  }\n}\nexport default AllDocuments\n"],"sourceRoot":""}