{"version":3,"sources":["views/apps/Contract/handleServices.js"],"names":["handleServices","state","rowData","paginationPageSize","currentPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","headerCheckboxSelectionFilteredOnly","checkboxSelection","headerCheckboxSelection","pinned","window","innerWidth","onCellEditingStopped","params","Config","headers","Authorization","localStorage","getItem","axios","put","data","id","name","description","variable","value","variable1","value1","total_ht","total_ttc","tva","document_id","status","then","result","console","log","catch","error","toast","onRowSelected","parent_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","currenPageSize","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","get","this","props","match","response","services","JSON","stringify","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","tag","length","size","right","onClick","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","align","history","push","React","Component"],"mappings":"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","file":"static/js/158.a25e05b8.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n    Card,\n    CardBody,\n    Button,\n    UncontrolledDropdown,\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle\n} from \"reactstrap\"\nimport { AgGridReact } from \"ag-grid-react\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport { ChevronDown } from \"react-feather\"\nimport axios from \"axios\"\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\n\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport {history} from \"../../../history\";\nimport {toast} from \"react-toastify\";\n\nclass handleServices extends React.Component {\n    state = {\n        rowData: null,\n        paginationPageSize: 20,\n        currentPageSize: 50,\n        getPageSize: \"\",\n        defaultColDef: {\n            sortable: true,\n            editable: true,\n            resizable: true,\n            suppressMenu: true\n        },\n        columnDefs: [\n            {\n                headerName: \"â‚¬ HT\",\n                field: \"value\",\n                width: 150,\n                filter: true,\n                headerCheckboxSelectionFilteredOnly: true,\n            },\n            {\n                headerName: \"Nombre\",\n                field: \"value1\",\n                width: 150,\n                filter: true,\n                headerCheckboxSelectionFilteredOnly: true,\n            },\n            {\n                headerName: \"Total HT\",\n                field: \"total_ht\",\n                filter: true,\n                width: 150\n            },\n            {\n                headerName: \"Nom de la prestation\",\n                field: \"name\",\n                filter: true,\n                checkboxSelection: true,\n                headerCheckboxSelection: true,\n                width: 400,\n                pinned: window.innerWidth > 992 ? \"left\" : false\n            },\n            {\n                headerName: \"Total TTC\",\n                field: \"total_ttc\",\n                filter: true,\n                width: 150\n            }\n        ]\n    }\n\n    componentDidMount() {\n        const Config = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        }\n        axios.get(\global.config.server_url + "/documents/\" + this.props.match.params.id, Config).then(response => {\n            let rowData = response.data.services\n            JSON.stringify(rowData)\n            this.setState({ rowData })\n        })\n    }\n\n    onCellEditingStopped = params => {\n        const Config = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        }\n        axios.put(\global.config.server_url + "/services/\" + params.data.id,  {\n            name: params.data.name,\n            description: params.data.description,\n            variable: params.data.variable,\n            value: params.data.value,\n            variable1: params.data.variable1,\n            value1: params.data.value1,\n            total_ht: params.data.total_ht,\n            total_ttc: params.data.total_ttc,\n            tva: params.data.tva,\n            document_id: params.data.document_id,\n            status: \"unselected\"\n        }, Config)\n            .then(function(result) {\n                console.log(result)\n            })\n            .catch(function(error) {\n                toast.error(\"API injoignable\")\n            })\n    }\n\n    onRowSelected = params => {\n        const Config = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        }\n        axios.put(\global.config.server_url + "/services/\" + params.data.id,  {\n            name: params.data.name,\n            description: params.data.description,\n            variable: params.data.variable,\n            value: params.data.value,\n            variable1: params.data.variable1,\n            value1: params.data.value1,\n            total_ht: params.data.total_ht,\n            total_ttc: params.data.total_ttc,\n            tva: params.data.tva,\n            parent_id: 0,\n            document_id: params.data.document_id,\n            status: \"selected\"\n        }, Config)\n            .then(function(result) {\n                console.log(result)\n            })\n            .catch(function(error) {\n                toast.error(\"API injoignable\")\n            })\n    }\n\n    onGridReady = params => {\n        this.gridApi = params.api\n        this.gridColumnApi = params.columnApi\n        this.setState({\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n            getPageSize: this.gridApi.paginationGetPageSize(),\n            totalPages: this.gridApi.paginationGetTotalPages()\n        })\n    }\n\n    updateSearchQuery = val => {\n        this.gridApi.setQuickFilter(val)\n    }\n\n    filterSize = val => {\n        if (this.gridApi) {\n            this.gridApi.paginationSetPageSize(Number(val))\n            this.setState({\n                currenPageSize: val,\n                getPageSize: val\n            })\n        }\n    }\n\n    render() {\n        const { rowData, columnDefs, defaultColDef } = this.state\n        return (\n            <React.Fragment>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Prestations\"\n                    breadCrumbParent=\"Prestations\"\n                    breadCrumbActive=\"Prestations\"\n                />\n                <Card className=\"overflow-hidden agGrid-card\">\n                    <CardBody className=\"py-0\">\n                        {this.state.rowData === null ? null : (\n                            <div className=\"ag-theme-material w-200 my-2 ag-grid-table\">\n                                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                                    <div className=\"mb-1\">\n                                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                                            <DropdownToggle tag=\"div\">\n                                                {this.gridApi\n                                                    ? this.state.currenPageSize\n                                                    : \"\" * this.state.getPageSize -\n                                                    (this.state.getPageSize - 1)}{\" \"}\n                                                -{\" \"}\n                                                {this.state.rowData.length -\n                                                this.state.currenPageSize * this.state.getPageSize >\n                                                0\n                                                    ? this.state.currenPageSize * this.state.getPageSize\n                                                    : this.state.rowData.length}{\" \"}\n                                                of {this.state.rowData.length}\n                                                <ChevronDown className=\"ml-50\" size={15} />\n                                            </DropdownToggle>\n                                            <DropdownMenu right>\n                                                <DropdownItem\n                                                    tag=\"div\"\n                                                    onClick={() => this.filterSize(20)}\n                                                >\n                                                    20\n                                                </DropdownItem>\n                                                <DropdownItem\n                                                    tag=\"div\"\n                                                    onClick={() => this.filterSize(50)}\n                                                >\n                                                    50\n                                                </DropdownItem>\n                                                <DropdownItem\n                                                    tag=\"div\"\n                                                    onClick={() => this.filterSize(100)}\n                                                >\n                                                    100\n                                                </DropdownItem>\n                                                <DropdownItem\n                                                    tag=\"div\"\n                                                    onClick={() => this.filterSize(134)}\n                                                >\n                                                    134\n                                                </DropdownItem>\n                                            </DropdownMenu>\n                                        </UncontrolledDropdown>\n                                    </div>\n                                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                                        { /* <div className=\"table-input mr-1\">\n                                            <Input\n                                                placeholder=\"search...\"\n                                                onChange={e => this.updateSearchQuery(e.target.value)}\n                                                value={this.state.value}\n                                            />\n                                        </div>*/}\n                                        <div className=\"export-btn\">\n                                            <Button.Ripple\n                                                color=\"primary\"\n                                                onClick={() => this.gridApi.exportDataAsCsv()}\n                                            >\n                                                Export as CSV\n                                            </Button.Ripple>\n                                        </div>\n                                    </div>\n                                </div>\n                                <ContextLayout.Consumer>\n                                    {context => (\n                                        <AgGridReact\n                                            gridOptions={{}}\n                                            rowSelection=\"multiple\"\n                                            defaultColDef={defaultColDef}\n                                            columnDefs={columnDefs}\n                                            rowData={rowData}\n                                            onCellEditingStopped={this.onCellEditingStopped}\n                                            onGridReady={this.onGridReady}\n                                            onRowSelected={this.onRowSelected}\n                                            colResizeDefault={\"shift\"}\n                                            animateRows={true}\n                                            floatingFilter={true}\n                                            pagination={true}\n                                            pivotPanelShow=\"always\"\n                                            enableRtl={context.state.direction === \"rtl\"}\n                                        />\n                                    )}\n                                </ContextLayout.Consumer>\n                            </div>\n                        )}\n                        <div align=\"center\">\n                            <Button.Ripple\n                                color=\"primary\"\n                                onClick={() => history.push(\"/pages/contract/\" + this.props.match.params.id)}\n                            >\n                                GÃ©nÃ©rer le contrat\n                            </Button.Ripple>\n                        </div>\n                    </CardBody>\n                </Card>\n            </React.Fragment>\n        )\n    }\n}\nexport default handleServices\n"],"sourceRoot":""}